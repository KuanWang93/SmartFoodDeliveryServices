name: Build and Push Docker image to ECR

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-2
      REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # 仅仓库名，如 foodie-server

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: [DEBUG] List workflows and grep suspicious fields
        run: |
          echo "== List .github/workflows =="
          ls -la .github/workflows || true
          echo
          echo "== Grep 'configure-aws-credentials' =="
          grep -R --line-number "configure-aws-credentials" .github/workflows || true
          echo
          echo "== Grep 'output-env-credentials' =="
          grep -R --line-number "output-env-credentials" .github/workflows || true
          echo
          echo "== Grep 'audience:' =="
          grep -R --line-number "audience:" .github/workflows || true
          echo
          echo "GITHUB_WORKFLOW_REF = $GITHUB_WORKFLOW_REF"
          echo "GITHUB_WORKFLOW     = $GITHUB_WORKFLOW"
          echo "GITHUB_JOB          = $GITHUB_JOB"

      - name: [DEBUG] Check secrets visibility
        env:
          AKID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SAK:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          REPO: ${{ secrets.ECR_REPOSITORY }}
        run: |
          test -z "$AKID" && echo "AWS_ACCESS_KEY_ID = MISSING" || echo "AWS_ACCESS_KEY_ID length = ${#AKID}"
          test -z "$SAK"  && echo "AWS_SECRET_ACCESS_KEY = MISSING" || echo "AWS_SECRET_ACCESS_KEY length = ${#SAK}"
          test -z "$REPO" && echo "ECR_REPOSITORY = MISSING" || echo "ECR_REPOSITORY = $REPO"

      - name: Configure AWS credentials (static keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}


      - name: Verify AWS identity (must succeed)
        run: |
          set -e
          aws sts get-caller-identity
          aws configure list

      - name: [DEBUG] Clear Docker credentials cache (best-effort)
        continue-on-error: true
        run: |
          rm -f ~/.docker/config.json || true

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: [DEBUG] Show ECR target
        run: |
          echo "ECR registry: ${{ steps.ecr.outputs.registry }}"
          echo "Repository: $REPOSITORY"
          echo "Region: $AWS_REGION"

      - name: Set image tags
        run: |
          REG="${{ steps.ecr.outputs.registry }}"
          echo "IMAGE_LATEST=$REG/$REPOSITORY:latest" >> $GITHUB_ENV
          echo "IMAGE_SHA=$REG/$REPOSITORY:${GITHUB_SHA}" >> $GITHUB_ENV
          echo "IMAGE_LATEST=$REG/$REPOSITORY:latest"
          echo "IMAGE_SHA=$REG/$REPOSITORY:${GITHUB_SHA}"

      - name: Build image
        run: |
          set -euo pipefail
          set -x
          docker build -t "$IMAGE_LATEST" .
          docker tag "$IMAGE_LATEST" "$IMAGE_SHA"

      - name: Push image
        run: |
          set -euo pipefail
          set -x
          docker push "$IMAGE_LATEST"
          docker push "$IMAGE_SHA"

      - name: [DEBUG] Verify images on ECR (best-effort)
        continue-on-error: true
        run: |
          aws ecr describe-images --repository-name "$REPOSITORY" --image-ids imageTag=latest --region "$AWS_REGION"
          aws ecr describe-images --repository-name "$REPOSITORY" --image-ids imageTag="${GITHUB_SHA}" --region "$AWS_REGION"
