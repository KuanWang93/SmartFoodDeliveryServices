spring:
  profiles:
    active: dev
  datasource:
    url: jdbc:postgresql://${chris.datasource.host}:${chris.datasource.port}/${chris.datasource.database}
    username: ${chris.datasource.username}
    password: ${chris.datasource.password}
    driver-class-name: ${chris.datasource.driver-class-name}

  jpa:
    hibernate:
      ddl-auto: none
      # none / 不设置：Hibernate 不对数据库做任何 schema 操作。
      # validate：仅校验数据库表结构是否与实体映射一致，如果不一致就抛异常，不会自动建表或改表。
      # update：如上所述，在启动时 “增量” 修改表结构，添加缺失的表/列/索引，但不删列、不改列类型。
      # create：启动时先删表（DROP），再根据所有实体 CREATE TABLE，相当于 “全量重建”。（原有数据会全部丢失）
      # create-drop：跟 create 一样的行为，但会在 SessionFactory 关闭或应用 Context 结束时，再执行一次 DROP ALL TABLES，常用于测试环境。
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect

  #文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB #一次请求可以上传多个文件，总大小不超过100MB

logging:
  level:
    com:
      chris:
        repository: debug
        service: info
        controller: info

jwt:
  secret-base64: ${chris.jwt.secret-base64}
  access-expiration-seconds: 3600     # Access Token 有效期 1 小时
  refresh-expiration-seconds: 43200  # Refresh Token 有效期 1 天

google:
  oauth:
    client-id: ${chris.google.oauth.client-id}
  maps:
    api-key: ${chris.google.maps.api-key}
